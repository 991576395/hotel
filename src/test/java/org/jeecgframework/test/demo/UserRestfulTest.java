package org.jeecgframework.test.demo;

import java.io.File;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.time.DateFormatUtils;
import org.apache.commons.lang.time.DateUtils;
import org.jeecgframework.AbstractUnitTest;
import org.jeecgframework.core.util.PasswordUtil;
import org.jeecgframework.core.util.ResourceUtil;
import org.jeecgframework.minidao.pojo.MiniDaoPage;
import org.jeecgframework.web.system.pojo.base.TSUser;
import org.jeecgframework.web.system.service.SystemService;
import org.jeecgframework.web.system.service.UserService;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.util.PHPAndJavaSerialize;
import com.util.PhpDateUtils;
import com.xuzy.hotel.checkingaccount.dao.CvcCheckingAccountDao;
import com.xuzy.hotel.checkingaccount.entity.CvcCheckingAccountEntity;
import com.xuzy.hotel.checkingaccount.service.CvcCheckingAccountService;
import com.xuzy.hotel.checkingaccountorder.dao.CvcCheckingAccountOrderDao;
import com.xuzy.hotel.checkingaccountorder.entity.CvcCheckingAccountOrderEntity;
import com.xuzy.hotel.checkingaccountorder.service.CvcCheckingAccountOrderService;
import com.xuzy.hotel.deliverygoods.dao.CvcDeliveryGoodsDao;
import com.xuzy.hotel.deliveryinfo.entity.CvcDeliveryInfoEntity;
import com.xuzy.hotel.deliveryinfo.service.CvcDeliveryInfoService;
import com.xuzy.hotel.deliveryorder.dao.CvcDeliveryOrderDao;
import com.xuzy.hotel.deliveryorder.service.CvcDeliveryOrderService;
import com.xuzy.hotel.inventory.entity.CvcInventoryTableEntity;
import com.xuzy.hotel.inventory.service.CvcInventoryTableServiceI;
import com.xuzy.hotel.order.dao.CvcOrderInfoDao;
import com.xuzy.hotel.order.entity.CvcOrderInfoEntity;
import com.xuzy.hotel.order.module.CallBaseRequest;
import com.xuzy.hotel.order.module.Data;
import com.xuzy.hotel.order.service.CvcOrderInfoService;
import com.xuzy.hotel.order.web.CvcOrderInfoController;
import com.xuzy.hotel.order.web.OrderCallBack;
import com.xuzy.hotel.orderaction.dao.CvcOrderActionDao;
import com.xuzy.hotel.ordergoods.dao.CvcOrderGoodsDao;
import com.xuzy.hotel.ordergoods.entity.CvcOrderGoodsEntity;
import com.xuzy.hotel.shipping.dao.CvcShippingDao;
import com.xuzy.hotel.shipping.entity.CvcShippingEntity;
import com.xuzy.hotel.shipping.service.CvcShippingService;
import com.xuzy.hotel.shippingbatchorder.dao.CvcShippingBatchOrderDao;
import com.xuzy.hotel.shippingbatchorder.entity.CvcShippingBatchOrderEntity;
import com.xuzy.hotel.ylrequest.ConmentHttp;
import com.xuzy.hotel.ylrequest.OrderCheckTask;
import com.xuzy.hotel.ylrequest.ResponseHead;
import com.xuzy.hotel.ylrequest.TukeRequestBody;
import com.xuzy.hotel.ylrequest.WuliuCheckTask;
import com.xuzy.hotel.ylrequest.module.Kuaidi100Response;
import com.xuzy.hotel.ylrequest.module.RequestDeliveryExchangeOrderJson;
import com.xuzy.hotel.ylrequest.module.RequestReNewExchangeEMSJson;

/**
 * UserRestful单元测试Demo
 * 
 * @author scott
 */
public class UserRestfulTest extends AbstractUnitTest {
	@Autowired
	private UserService userService;

	@Autowired
	private RestTemplate template;
	
	@Autowired
	private CvcOrderInfoService cvcOrderInfoService;
	
	@Autowired
	private WuliuCheckTask wuliuCheckTask;
	
	 @Autowired
	 private CvcCheckingAccountService cvcCheckingAccountService;

	@Resource
	private OrderCallBack orderCallBack; 
	
	@Resource
	SystemService systemService;
	
	@Autowired
	OrderCheckTask orderCheckTask;
	
	
	
	@Autowired
	private CvcDeliveryInfoService cvcDeliveryInfoService;
	
	  
	// 测试get单个用户
	 @Test
	public void testGet() throws Exception {
//		TSUser user = template.getForObject("http://localhost:8080/jeecg/rest/user/{id}", TSUser.class, "402880e74d75c4dd014d75d44af30005");
//
//		// getForEntity与getForObject的区别是可以获取返回值和状态、头等信息
//		ResponseEntity<TSUser> re = template.getForEntity("http://localhost:8080/jeecg/rest/user/{id}", TSUser.class, "402880e74d75c4dd014d75d44af30005");
//		System.out.println(re.getStatusCode());
//		System.out.println(re.getBody().getRealName());
		
		int[] orderIds = {};
		String[] shippingNames = {};
		String[] invoiceNos = {"557020888355893","557020888463028","557020888509903","557020888606865","557020888463481","557020887248545","557020888067654","557020888414922","557020888463739","557020888327694","557020888161986","557020888327801","557020888235616","557020888328098","557020888415259","557020888464299","557020888278939","557020888415317","557020887248917","557020888415523","557020888607806","557020888607855","557020888415622","557020888464737","557020888328700","557020888608226","557020888068041","557020888162257","557020888416034","557020888329005","557020888512287","557020888465452","557020887249154","557020888465494","557020888236853","557020888512477","557020888236952","557020888237042","557020888465874","557020888280786","557020888237273","557020888330128","557020888237356","557020888512972","557020888417214","557020888466286","557020888330631","557020888609497","557020888417446","557020888466690","557020888609760","557020888068397","557020888513558","557020888513590","557020888068439","557020888417818","557020888238131","557020888513707","557020888610172","557020888610198","557020888281883","557020888068637","557020888467508","557020888467524","557020888282170","557020888467607","557020888418543","557020888610438","557020888610461","557020888418626","557020888467821","557020888162695","557020888467979","557020888282410","557020888357337","557020888610859","557020888468324","557020888239204","557020888332314","557020888357360","557020888282568","557020888514960","557020888419269","557020888419293","557020888468795","557020887249907","557020888515116","557020888283046","557020888357501","557020888283129","557020887249949","557020888068959","557020888469231","557020888554230","557020888163271","557020888554255","557020888612251","557020888612277","557020888240590","557020888554446","557020888163438","557020888650103","557020888420440","557020888554560","557020888163511","557020888069254","557020888516163","557020888470361","557020888334336","557020888334369","557020888421018","557020888554727","557020888470643","557020888554750","557020888334690","557020888069486","557020888241705","557020888613432","557020888471088","557020888334971","557020888555120","557020888069668","557020888613663","557020888421984","557020888471609","557020888517351","557020888069759","557020888164113","557020888164147","557020888285793","557020888517732","557020888164246","557020888614224","557020888285991","557020888518037","557020888518078","557020888164329","557020888336125","557020888422701","557020888243263","557020888651069","557020888358582","557020888472698","557020888243529","557020888336745","557020888472839","557020888555658","557020888472953","557020888070187","557020888615668","557020888337198","557020888519233","557020888519381","557020888555799","557020888651507","557020888424301","557020888616229","557020888473555","557020888245110","557020888287914","557020888287955","557020888616724","557020888338253","557020888070443","557020888651614","557020888245680","557020888617144","557020888245870","557020888245904","557020888338865","557020888358947","557020888617532","557020888556342","557020888070922","557020888474991","557020888339483","557020888521825","557020888246373","557020888618233","557020888339681","557020888556649","557020888289654","557020888339913","557020888339996","557020888289845","557020888340200","557020888071151","557020888165334","557020888246993","557020888556862","557020888652307","557020888427585","557020888557084","557020888290876","557020888652372","557020888476533","557020888247488","557020888619389","557020888291155","557020888291197","557020889099052","557020889227471","557020889186800","557020889227547","557020889099318","557020889368879","557020889227794","557020888195307","557020888388183","557020889369521","557020889369778","557020889099920","557020888195646","557020889140005","557020888388373","557020889320581","557020888587263","557020888388621","557020889228800","557020889450701","557020889320979","557020889229063","557020889229097","557020889189333","557020889140948","557020889371188","557020889141045","557020888388852","557020888587651","557020889451550","557020889400664","557020889279449","557020889322090","557020889141482","557020889190026","557020889279738","557020889230806","557020889452137","557020888389140","557020888682833","557020889231325","557020888389207","557020889372681","557020889280355","557020888682916","557020888682965","557020889142233","557020889191248","557020889142464","557020888196800","557020889232497","557020889324294","557020889373630","557020889143017","557020889324617","557020888683252","557020888389579","557020889454018","557020889233180","557020889143629","557020889233412","557020889325267","557020889325291","557020889374281","557020889193269","557020888197345","557020889143892","557020889143926","557020888197444","557020889282278","557020889282500","557020888683658","557020889325887","557020888589020","557020889375627","557020889235151","557020889401944","557020888683864","557020889455841","557020889194382","557020889194556","557020889283391","557020889194630","557020888684060","557020889236019","557020889402330","557020889402371","557020888390544","557020888198251","557020889376971","557020889236985","557020888390924","557020888684284","557020889284530","557020889328287","557020889457599","557020888684466","557020888684474","557020889378266","557020889402934","557020889196577","557020889403114","557020889196643","557020888391955","557020889458589","557020889238817","557020888198707","557020888198723","557020888198731","557020889403353","557020888392318","557020889380288","557020889286865","557020889149139","557020888591067","557020889459827","557020889403551","557020888199119","557020888591232","557020888685331","557020888591406","557020889198771","557020889382110","557020889287731","557020888392771","557020889241506","557020889199001","557020889382482","557020889382649","557020889382763","557020889288135","557020889382920","557020889403932","557020889461328","557020889199530","557020888592115","557020889383209","557020889199977","557020889501933","557020889383514","557020889242744","557020889332735","557020889550476","557020889289414","557020888592255","557020888199614","557020888592313","557020889243650","557020888199648","557020889244146","557020888199663","557020888393456","557020888685851","557020889385162","557020889551607","557020889551631","557020889503897","557020889244955","557020888199978","557020889600016","557020889552183","557020889552241","557020888592735","557020889552290","557020888394009","557020889504499","557020889504564","557020889552563","557020889291204","557020888592818","557020889246828","557020889246877","557020888686362","557020889505009","557020889387069","557020889405044","557020889553348","557020889387242","557020888592933","557020889387564","557020889247404","557020889247438","557020889505694","557020888593048","557020889505942","557020889465154","557020889506031","557020889247651","557020889337171","557020889388323","557020889405341","557020889405366","557020889248162","557020889337411","557020889388695","557020888394637","557020889465824","557020889293234","557020889466095","557020889936204","557020889936253","557020890484574","557020890665859","557020889887639","557020890528198","557020889887688","557020890620078","557020890438083","557020890485134","557020889645557","557020890703668","557020890438554","557020890620680","557020890528792","557020890528909","557020889888009","557020890578656","557020890704146","557020890578813","557020889936899","557020889888157","557020890621415","557020890529329","557020890079382","557020889888231","557020890579290","557020890579431","557020890621878","557020890486645","557020890079549","557020890705085","557020890705143","557020890079598","557020890622298","557020889937194","557020890579993","557020889449950","557020890440410","557020890079655","557020889888678","557020890441012","557020889937376","557020890623379","557020890623411","557020890705994","557020890623486","557020889888827","557020890531143","557020890488344","557020890706331","557020890441723","557020889937541","557020890441830","557020890624187","557020890079945","557020890624294","557020890581262","557020890581320","557020890670859","557020890624518","557020889937681","557020890489094","557020889646621","557020889889114","557020890624864","557020890707081","557020890707107","557020890707149","557020889889262","557020890489391","557020889646753","557020889937814","557020890582187","557020890582237","557020890080265","557020889937988","557020889938028","557020890707925","557020889938069","557020889889627","557020890443331","557020890532844","557020890532893","557020889647033","557020889889874","557020890672590","557020890626000","557020890443695","557020890582724","557020890490332","557020890708816","557020890708899","557020890444073","557020890490555","557020890673358","557020890583011","557020890490753","557020890490795","557020890490829","557020890534006","557020890444909","557020890583581","557020890080778","557020890491272","557020890709699","557020890491348","557020890583904","557020889890252","557020890080877","557020890751634","557020890534824","557020890710507","557020890674844","557020890491876","557020890491918","557020889890559","557020890445872","557020889890575","557020890492379","557020890446086","557020890492460","557020889939323","557020890492825","557020889648577","16639681","557020890492924","557020889939695","557020890492981","557020890712032","557020890081305","557020889648791","557020890447621","557020889648866","557020890447936","557020890447993","557020890752319","557020890448140","557020890537009","557020890586196","557020890752426","557020890586410","557020890494409","557020890713089","557020890752541","557020890586733","557020889940354","557020889891573","557020890631240","557020890713501","557020890677706","557020889940495","557020890495125","557020890495166","557020890449734","557020890678001","557020890713899","557020890538361","557020890081776","557020890081792","557020890538700","557020890587814","557020889940677","557020900591293","557020889940693","557020889649583","557020890588036","557020889649633","557020890539229","557020890632560","557020890800910","557020889940784","557020890801066","557020890496552","557020890588630","557020890679298","557020890082089","557020889940891","557020890715589","557020890715662","557020890496982","557020890633543","557020890716165","557020889941121","557020890082352","557020890082386","557020900591319","557020900815858","557020900775151","557020900637252","557020900080107","557020900775383","557020900775425","557020900685087","557020900816039","557020900816179","557020900591707","557020900729646","557020900904082","557020900775680","557020900816443","557020900080255","557020900685525","557020899649763","557020900591988","557020900816633","557020900816682","557020900685665","557020900638268","557020900685749","557020900776167","557020900730321","557020900592366","557020900904850","557020900817151","557020900592630","557020900638649","557020900730883","557020900817300","557020900950069","557020899548502","557020899888791","557020900080727","557020900080735","557020900639324","557020900593349","557020900851390","557020900905618","557020900950143","557020900777439","557020900731519","557020900851424","557020900731667","557020900593612","557020899548692","557020900080883","557020900080891","557020900851531","557020900593844","557020900639928","557020900950275","557020900777975","557020900818563","557020900640009","557020900081097","557020900778080","557020900950333","557020900950358","557020900778247","557020900851671","557020899889179","557020900732426","557020900081170","557020899548924","557020900687836","557020900906889","557020899889294","557020900640744","557020900640819","557020900851770","557020900778742","557020900907135","557020900641007","557020899549062","557020900907267","557020900688263","557020900950622","557020900851952","557020900733242","557020899549146","557020900779344","557020900819595","557020900595393","557020900950663","557020900908083","557020900688636","557020900081550","557020900950721","557020900081600","557020900733606","557020900688800","557020900733648","557020900688834","557020900908356","557020899549450","557020900779781","557020900950838","557020900779864","557020900950887","557020900688990","557020899889666","557020900908794","557020900689220","557020900820304","557020900642203","557020900642237","557020900734281","557020900820445","557020900820478","557020899889898","557020900642435","557020899889930","557020900082061","557020900596615","557020899549872","557020900820742","557020900780771","557020900780813","557020900852729","557020900734885","557020900951224","557020900734968","557020900780995","557020900781027","557020900852802","557020900643045","557020900852877","557020899890177","557020900781241","557020900852927","557020900690533","557020900735312","557020900735353","557020900910048","557020900821484","557020900781555","557020900597167","557020900821575","557020900821583","557020900821617","557020900597282","557020900853065","557020900853099","557020900735924","557020900821740","557020900951653","557020900951745","557020900644134","557020900691135","557020900782058","557020900736187","557020900910618","557020900082731","557020900691325","557020900910774","557020900082848","557020901000526","557020900644605","557020900598330","557020900853388","557020900853412","557020900782637","557020900645008","557020900782918","557020900692273","557020900598603","557020900853487","557020900598660","557020900823746","557020900645560","557020900737458","557020900912242","557020900912333","557020900952115","557020900599023","557020899890755","557020900912754"};
		
		for(int i =0;i < orderIds.length;i++) {
			try {
				int orderId = orderIds[i];
				String shippingName = "百世汇通";
				String invoiceNo = invoiceNos[i];
				//获取快递公司
				CvcShippingEntity cvcShipping = new CvcShippingEntity();
				cvcShipping.setEnabled(1);
				cvcShipping.setShippingName(shippingName);
				//查询快递公司
				MiniDaoPage<CvcShippingEntity> daoPage = cvcShippingService.getAll(cvcShipping, 1, 1);
				CvcShippingEntity cvcShippingEntity = null;
				
				cvcShippingEntity = daoPage.getResults().get(0);

				CvcOrderInfoEntity cvcOrderInfo = new CvcOrderInfoEntity();
				cvcOrderInfo.setId(orderId);
				CvcOrderInfoEntity cvcOrderInfo1 = cvcOrderInfoService.getOrder(cvcOrderInfo);
				if(cvcOrderInfo1 != null) {
					//请求伊利接口  CRMIF.ReNewExchangeEMSJson
					RequestReNewExchangeEMSJson emsJson = new RequestReNewExchangeEMSJson();
					emsJson.setOrderID(orderId);
					emsJson.setEMSCompany(shippingName);
					emsJson.setEMSOdd(invoiceNo);
					ResponseHead head = ConmentHttp.sendHttp(new TukeRequestBody.Builder().setSequence(2)
							.setParams(emsJson).setServiceCode("CRMIF.ReNewExchangeEMSJson").builder(), null);
					if(head.getReturn() >= 0) {
						ConmentHttp.postorder(cvcShippingEntity.getShippingCode(), invoiceNo);
						cvcDeliveryOrderService.updateNu(orderId, cvcShippingEntity.getShippingId(),cvcShippingEntity.getShippingName(),invoiceNo);
						if(cvcOrderInfo1.getExceptionStatus() != null &&
								4 ==cvcOrderInfo1.getExceptionStatus()|| 5 == cvcOrderInfo1.getExceptionStatus()) {
							//更新异常订单
							cvcOrderInfoService.updateHandle(cvcOrderInfo1.getId(),1,(int)PhpDateUtils.getTime(),ResourceUtil.getSessionUser().getUserName());
						}
					}else {
						System.out.println("接口调用失败！原因："+head.getReturnInfo());
					}
				}
				System.out.println("更新成功");
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		
		
	}

	// 测试get全部用户
	//@Test
	public void testGetAll() throws Exception {
		String str = template.getForObject("http://localhost:8080/jeecg/rest/user", String.class);
		
		Gson gson = new Gson();
		List<TSUser> list =gson.fromJson(str, new TypeToken<List<TSUser>>() {}.getType());
		for (TSUser r : list) {
			System.out.println("-----restful------" + r.getUserName());
			System.out.println("-----restful------" + r.getRealName());
		}
	}

	
	
	// 测试create
	 @Test
	public void testCreate() throws Exception {
		 HttpHeaders headers = new HttpHeaders();
		//  请勿轻易改变此提交方式，大部分的情况下，提交方式都是表单提交
		 headers.setContentType(MediaType.APPLICATION_JSON);
		 TSUser user = new TSUser();
		 user.setUserName("zhangsan");
		 user.setPassword(PasswordUtil.encrypt("zhangsan", "123456", PasswordUtil.getStaticSalt()));
		 user.setRealName("junit demo");
		 user.setStatus(Short.valueOf("1"));
		 user.setDeleteFlag(Short.valueOf("1"));
		 user.setDevFlag("1");
		 //  执行HTTP请求
//		 template.postForLocation("http://localhost:8080/jeecg/rest/user", user);
		 ResponseEntity<String> response = template.postForEntity("http://localhost:8080/jeecg/rest/user", user, String.class);
		 //  输出结果
		 System.out.println(response.getBody());
	}
	 
	 @Autowired
	 CvcOrderInfoController cvcOrderInfoController;
	 
	 @Autowired
	  private CvcCheckingAccountOrderService cvcCheckingAccountOrderService;
	// 测试update
	@Test
	public void testUpdate() throws Exception {
//		TSUser user = userService.get(TSUser.class, "402880e74d75c4dd014d75d44af30005");
//		user.setRealName("real demo");
//		template.put("http://localhost:8080/jeecg/rest/user/{id}", user, "402880e74d75c4dd014d75d44af30005");
		
//		int checkingAccountId = 864;
//		CvcCheckingAccountEntity  cvcOrderInfoEntity = cvcCheckingAccountService.get(checkingAccountId+"");
//		int page = 1;
//		CvcCheckingAccountOrderEntity query = new CvcCheckingAccountOrderEntity();
//		query.setIsAddCheckingAccount(0);
//		query.setOrderId(14032581);
//		MiniDaoPage<CvcCheckingAccountOrderEntity> list = cvcCheckingAccountOrderService.getAll(query, page, 10);
//		if(CollectionUtils.isNotEmpty(list.getResults())) {
//			for (CvcCheckingAccountOrderEntity entity : list.getResults()) {
//				RequestCheckingAccountDetailAddJson checkingAccountDetailAddJson = new RequestCheckingAccountDetailAddJson();
//				checkingAccountDetailAddJson.setCheckAccountInfoID(checkingAccountId);
//				checkingAccountDetailAddJson.setOrderID(entity.getOrderId());
//				checkingAccountDetailAddJson.setProductCode(entity.getGoodsSn());
//				checkingAccountDetailAddJson.setQuantity(entity.getGoodsNumber());
//				checkingAccountDetailAddJson.setEMSCompany("百世快递");
//				checkingAccountDetailAddJson.setDeliver(cvcOrderInfoEntity.getDeliver());
//				checkingAccountDetailAddJson.setAccountType(cvcOrderInfoEntity.getAccountType());
//				checkingAccountDetailAddJson.setOppStaff(cvcOrderInfoEntity.getOppstaff());
////				
////				//调用上传订单详情接口
//				ResponseHead responseHead = ConmentHttp.sendHttp(new TukeRequestBody.Builder()
//						.setSequence(2)
//						.setServiceCode("CRMIF.CheckingAccountDetailAddJson")
//						.setParams(checkingAccountDetailAddJson).builder(), null);
//				if(responseHead.getReturn() >= 0) {
//					cvcCheckingAccountOrderService.updateAddCheckingAccount(checkingAccountId, entity.getOrderId(), PhpDateUtils.getTime());
//				}
//			}
//		}
//		cvcOrderInfoController.orderStatusUpdate(14119978, "returnWareHouse", "", "");
		
		String value = ResourceUtil.searchAllCodeByName("true","kuaidi");
		System.out.println(value);
		
	}
	
	@Autowired
	private CvcInventoryTableServiceI cvcInventoryTableService;
	
	@Autowired
	private CvcShippingService cvcShippingService;
	
	
	@Resource
	private CvcCheckingAccountDao cvcCheckingAccountDao;
	
	@Resource
	private CvcCheckingAccountOrderDao cvcCheckingAccountOrderDao;
	
	@Resource
	private CvcOrderGoodsDao cvcOrderGoodsDao;
	
	//测试del
	@Test
	public void testDelete() throws Exception {
//		HttpHeaders headers = new HttpHeaders();
//		headers.add("X-Auth-Token", UUID.randomUUID().toString());
//		headers.setContentType(MediaType.APPLICATION_JSON);
//		template.delete("http://localhost:8080/jeecg/rest/user/{id}","111111");
		
//		CvcOrderInfoEntity cvcOrderInfo = new CvcOrderInfoEntity();
//		cvcOrderInfo.setId(14556995);
//		MiniDaoPage<CvcOrderInfoEntity> cvcOrderInfoEntities = cvcOrderInfoService.getAll(cvcOrderInfo, 1, 1);
		
//		List<CvcOrderInfoEntity> cvcOrderInfoEntities = cvcOrderInfoService.getTogezelWuliuList();
//		for (CvcOrderInfoEntity cvcOrderInfoEntity : cvcOrderInfoEntities.getResults()) {
//			CvcShippingEntity cvcShipping = new CvcShippingEntity();
//			cvcShipping.setEnabled(1);
//			cvcShipping.setShippingName(cvcOrderInfoEntity.getShippingName());
//			//查询快递公司
//			MiniDaoPage<CvcShippingEntity> daoPage = cvcShippingService.getAll(cvcShipping, 1, 1);
//			CvcShippingEntity cvcShippingEntity = null;
//			if(CollectionUtils.isEmpty(daoPage.getResults())) {
//				continue;
//			}else {
//				cvcShippingEntity = daoPage.getResults().get(0);
//			}
//			String result = ConmentHttp.getOrderWuliu(cvcShippingEntity.getShippingCode(), cvcOrderInfoEntity.getInvoiceNo(), cvcOrderInfoEntity.getTel());
//			if(StringUtils.isNotEmpty(result) && result.contains("\"message\":\"ok\"")) {
//				ConmentHttp.postMyErrorOrder(result);
//			}
//		}
//		wuliuCheckTask.run();
		
//		final CountDownLatch countDownLatch = new CountDownLatch(100);
//		for(int i = 0; i < 100;i++) {
//			new Thread(new Runnable() {
//				@Override
//				public void run() {
//					try {
//						countDownLatch.await();
//					} catch (InterruptedException e) {
//						e.printStackTrace();
//					}
//					//测试库存
//					cvcInventoryTableService.subInventory("100507001", 1, 0);
//				}
//			}).start();
//			countDownLatch.countDown();
//			System.out.println("启动:"+i);
//		}
//		
//		Thread.sleep(1000*60*60*10);
//		
//		systemService.initAllTypeGroups();
//		orderCheckTask.run();
//		CallBaseRequest baseRequest = ConmentHttp.postShentongValue("773017398093081",FileUtils.readFileToString(new File("/Users/zmeng/Documents/ceshi"), "utf-8"));
//		ConmentHttp.postMyErrorOrder(baseRequest);
//		orderCallBack.runByRequest(baseRequest);
//		发送物流
//		CvcCheckingAccountEntity cvcCheckingAccount = cvcCheckingAccountService.get("854");
//		List<CvcOrderInfoEntity> cvcOrderInfoEntities = cvcOrderInfoService.getAccountOrderList("", cvcCheckingAccount.getStartTime(), cvcCheckingAccount.getEndTime());
//		cvcCheckingAccountService.update(cvcCheckingAccount,cvcCheckingAccount.getCheckingAccountId(),cvcOrderInfoEntities);
//		RequestReturnedExchangeOrderJson exchangeOrderJson = new RequestReturnedExchangeOrderJson();
//		int id = 14108428;
//		exchangeOrderJson.setOrderID(id);
//		exchangeOrderJson.setReturningReason("");
//		exchangeOrderJson.setReturnedReason("");
//		ResponseHead head = ConmentHttp.sendHttp(new TukeRequestBody.Builder()
//				.setParams(exchangeOrderJson).setSequence(2)
//				.setServiceCode("CRMIF.ReturnedExchangeOrderJson").builder(), null);
//		if(head.getReturn() >= 0) {
//			//退货
//			cvcOrderInfoService.updateStatusByOrderId(id, 8);
//		}
		CvcCheckingAccountEntity accountEntity = cvcCheckingAccountService.get("1260");
		//插入一条物流记录
		String values =	"15930890,14894246,14903983,14908445,14909460,14912187,14913290,14914090,14914191,14915127,14915446,14915675,14917424,14917566,14920241,14921064,14921217,14923496,14923618,14923640,14923646,14923961,14924418,14925646,14925941,14926290,14927160,14929523,14930498,14930572,14931046,14931566,14931567,14931568,14931569,14931570,14931571,14931834,14932208,14932452,14932488,14932683,14933125,14933490,14934543,14934566,14934902,14935225,14935287,14937021,14937219,14937700,14938876,14939024,14939499,14942276,14942840,14944391,14945122,14945806,14946096,14947397,14948473,14950416,14950995,14955674,14955796,14958573,14960336,14962822,14964950,14971425,14973957,14981315,14983461,14984500,14996244,15002036,15031306,15031736,15033154,15034010,15037523,15047128,15072799,15082541,15107733,15112569,15123525,15126868";
		for(String value:values.split(",")) {
//			CvcDeliveryInfoEntity cvcDeliveryInfo = new CvcDeliveryInfoEntity();
//			cvcDeliveryInfo.setNumber(value);
//			cvcDeliveryInfo.setMessage("ok");
//			
//			List<Data> datas = new ArrayList<>();
//			Data data = new Data();
//			data.setFtime(DateFormatUtils.format(Calendar.getInstance(), "yyyy-MM-dd HH:mm:ss"));
//			data.setTime(DateFormatUtils.format(Calendar.getInstance(), "yyyy-MM-dd HH:mm:ss"));
//			data.setContext("产品已经以短信的形式发送到您兑换的手机号上，请注意查收，如有疑问请致电010-67537412（工作日10:00-18:00）。");
//			data.setShentongStatus("签收");
//			datas.add(data);
//			cvcDeliveryInfo.setData(PHPAndJavaSerialize.serialize(datas));
//			cvcDeliveryInfo.setState(5);
//			cvcDeliveryInfo.setCreateDate(DateFormatUtils.format(Calendar.getInstance(), "yyyy-MM-dd HH:mm:ss"));
//			//快递信息
//			cvcDeliveryInfoService.insert(cvcDeliveryInfo);
			CvcOrderInfoEntity cvcOrderInfoEntity = new CvcOrderInfoEntity();
			cvcOrderInfoEntity.setId(Integer.parseInt(value));
			cvcOrderInfoEntity = cvcOrderInfoService.getOrder(cvcOrderInfoEntity);
			
			
			if(cvcOrderInfoEntity == null) {
				continue;
			}
//			//推送至配送中 
//			RequestDeliveryExchangeOrderJson  requestBody = new RequestDeliveryExchangeOrderJson();
//			requestBody.setOrderID(cvcOrderInfoEntity.getId());
//			requestBody.setDeliveryingDate(DateFormatUtils.format(Calendar.getInstance(), "yyyy-MM-dd HH:mm:ss"));
//			ResponseHead responseHead = ConmentHttp.sendHttp(new TukeRequestBody.Builder()
//					.setSequence(2)
//					.setServiceCode("CRMIF.DeliveryExchangeOrderJson")
//					.setParams(requestBody).builder(), null);
//			if(responseHead.getReturn() >= 0) {
//				cvcOrderInfoService.updateStatusByOrderId(cvcOrderInfoEntity.getId(), 4);
//			}else {
//				System.out.println(cvcOrderInfoEntity.getId());
//			}
			
			
			//获取物流信息，并同步
//			CvcShippingEntity cvcShipping = new CvcShippingEntity();
//			cvcShipping.setEnabled(1);
//			cvcShipping.setShippingName(cvcOrderInfoEntity.getShippingName());
//			// 查询快递公司
//			MiniDaoPage<CvcShippingEntity> daoPage = cvcShippingService.getAll(cvcShipping, 1, 1);
//			CvcShippingEntity cvcShippingEntity = null;
//			if (CollectionUtils.isEmpty(daoPage.getResults())) {
//			} else {
//				cvcShippingEntity = daoPage.getResults().get(0);
//			}
//			String result = ConmentHttp.getOrderWuliuAll(cvcShippingEntity.getShippingCode(),
//					cvcOrderInfoEntity.getInvoiceNo(), cvcOrderInfoEntity.getTel());
//			if (StringUtils.isNotEmpty(result) && result.contains("\"message\":\"ok\"")) {
//				ConmentHttp.postMyErrorOrder(result);
//			} 
			
			
			CvcOrderGoodsEntity cvcOrderGoodsEntity = cvcOrderGoodsDao.getOrderGood(cvcOrderInfoEntity.getId()+"");
			CvcCheckingAccountOrderEntity cvcCheckingAccountOrder = new CvcCheckingAccountOrderEntity();
			cvcCheckingAccountOrder.setCheckingAccountId(1260);
			cvcCheckingAccountOrder.setOrderId(cvcOrderInfoEntity.getId());
			cvcCheckingAccountOrder.setInvoiceNo(cvcOrderInfoEntity.getInvoiceNo());
			cvcCheckingAccountOrder.setShippingName(cvcOrderInfoEntity.getShippingName());
			if(cvcOrderGoodsEntity != null) {
				cvcCheckingAccountOrder.setGoodsSn(cvcOrderGoodsEntity.getGoodsSn());
				cvcCheckingAccountOrder.setGoodsNumber(cvcOrderGoodsEntity.getGoodsNumber());
			}
			cvcCheckingAccountOrder.setIsAddCheckingAccount(0);
			cvcCheckingAccountOrder.setAddress(cvcOrderInfoEntity.getAddress());
			cvcCheckingAccountOrder.setConsignee(cvcOrderInfoEntity.getConsignee());
			cvcCheckingAccountOrder.setMobile(cvcOrderInfoEntity.getMobile());
			cvcCheckingAccountOrder.setSigninDate(cvcOrderInfoEntity.getSigninDate());
			cvcCheckingAccountOrder.setAddCheckingAccountTime(accountEntity.getAddTime());
			cvcCheckingAccountOrderDao.insert(cvcCheckingAccountOrder);
			
		}
	}
	
	@Resource
	private CvcOrderInfoDao cvcOrderInfoDao;
	
	@Resource
	private CvcDeliveryOrderDao cvcDeliveryOrderDao;
	
	@Autowired
	private CvcDeliveryOrderService cvcDeliveryOrderService;
	
	@Resource
	private CvcShippingBatchOrderDao cvcShippingBatchOrderDao;
	
	@Resource
	private CvcDeliveryGoodsDao cvcDeliveryGoodsDao;
	
	@Resource
	private CvcShippingDao cvcShippingDao;
	
	@Resource
	private CvcOrderActionDao cvcOrderActionDao;
	
	//测试del
	@Test
	public void addOrder() throws Exception {
//		CvcCheckingAccountEntity cvcCheckingAccount = cvcCheckingAccountService.get("904");
//		CvcOrderInfoEntity cvcOrderInfo = new CvcOrderInfoEntity();
//		cvcOrderInfo.setId(14431131);
//		MiniDaoPage<CvcOrderInfoEntity> cvcOrderInfoEntities = cvcOrderInfoService.getAll(cvcOrderInfo, 1, 1);
//		cvcCheckingAccountService.update(cvcCheckingAccount,904,cvcOrderInfoEntities.getResults());
		CvcOrderInfoEntity query = new CvcOrderInfoEntity();
//		query.setGetTimeStart("20200401");
//		query.setGetTimeEnd("20200410");
//		if(StringUtils.isNotEmpty(query.getGetTimeStart())) {
//			try {
//				Date date1 = DateUtils.parseDate(query.getGetTimeStart(),new String[] {"yyyyMMdd"}) ;
//				query.setGetTimeStart(String.valueOf(PhpDateUtils.getTime(date1)));
//			} catch (ParseException e) {
//				query.setGetTimeStart("");
//			}
//		}
//		
//		if(StringUtils.isNotEmpty(query.getGetTimeEnd())) {
//			try {
//				Date date1 = DateUtils.parseDate(query.getGetTimeEnd(),new String[] {"yyyyMMdd"}) ;
//				query.setGetTimeEnd(String.valueOf(PhpDateUtils.getTime(date1)));
//			} catch (ParseException e) {
//				query.setGetTimeEnd("");
//			}
//		}
		query.setOrderStatus(3);
		MiniDaoPage<CvcOrderInfoEntity> list = cvcOrderInfoService.getAll(query, 1, 10000);
		if(CollectionUtils.isNotEmpty(list.getResults())) {
			for (CvcOrderInfoEntity entity : list.getResults()) {
//				CvcShippingEntity cvcShippingEntity = cvcShippingDao.get(entity.getShippingName());
//					// 未订阅物流信息 开始订阅
//					Kuaidi100Response kuaidi100Response = ConmentHttp.postorder(cvcShippingEntity.getShippingCode(),
//							entity.getInvoiceNo());
//					System.out.println(kuaidi100Response.toString());
//				entity.setAddTime(PhpDateUtils.parseDate(Long.parseLong(entity.getAddTime()), "yyyy-MM-dd HH:mm:ss"));
//				entity.setGetTime(PhpDateUtils.parseDate(Long.parseLong(entity.getGetTime()), "yyyy-MM-dd HH:mm:ss"));
//				
//				String value = (0 == entity.getExceptionStatus())?"无异常":"有异常";
//				if(0 != entity.getExceptionStatus()) {
//					value += (entity.getIsShow() == 1)?"(未处理)":"(已处理)";
//				}
//				
//				entity.setExceptionStatusString(value);
				
				//获取物流信息，并同步
				CvcShippingEntity cvcShipping = new CvcShippingEntity();
				cvcShipping.setEnabled(1);
				cvcShipping.setShippingName(entity.getShippingName());
				// 查询快递公司
				MiniDaoPage<CvcShippingEntity> daoPage = cvcShippingService.getAll(cvcShipping, 1, 1);
				CvcShippingEntity cvcShippingEntity = null;
				if (CollectionUtils.isEmpty(daoPage.getResults())) {
				} else {
					cvcShippingEntity = daoPage.getResults().get(0);
				}
				String result = ConmentHttp.getOrderWuliuAll(cvcShippingEntity.getShippingCode(),
						entity.getInvoiceNo(), entity.getTel());
				if (StringUtils.isNotEmpty(result) && result.contains("\"message\":\"ok\"")) {
					ConmentHttp.postMyErrorOrder(result);
				} 
				
			}
		}
		System.out.println(list.toString());
	}
	
	
	@Test
	public void testOne() throws Exception {

		List<CvcInventoryTableEntity> inventoryTableEntities = cvcInventoryTableService.findHql("from CvcInventoryTableEntity where goodNumber = ?", "爱得利奶嘴B59");
		System.out.println(inventoryTableEntities.toString());
	}
}


